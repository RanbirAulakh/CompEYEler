def ritconv(image, kernel):
	image_height, image_width = image.shape[:2]
	kernel_height, kernel_width = kernel.shape[:2]

	# create empty image
	output = np.zeros((image_height, image_width))

	# band is 1 (GRAYSCALE)
	for x in range(image_height):
		for y in range(image_width):
			sumNum = 0
			for row_matrix in range(kernel_height):
				for col_matrix in range(kernel_width):
				
					pixel_row_index = x - (row_matrix)
					pixel_col_index = y - (col_matrix)

					# calculate if they are inboud, otherwise ignore if they are out of bound
					if(pixel_row_index >= 0 and pixel_row_index < image_height and pixel_col_index >= 0 and pixel_col_index < image_width):
						sumNum += image[pixel_row_index][pixel_col_index] * kernel[row_matrix][col_matrix]

			output[x][y] = sumNum

	return output